[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Willkommen!",
    "section": "",
    "text": "Dies ist die Seite zu meiner Daten-AG, die ich von Januar bis Juni 2024 halten möchte. Das Ziel dieser AG ist es, mithilfe der statistischen Programmiersprache R interessante Fragestellungen zu beantworten. Auf dieser Seite werden nach und nach R-Skripte entstehen, die jeweils in den AG-Stunden erstellt werden."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#anfang",
    "href": "index.html#anfang",
    "title": "Start in R",
    "section": "",
    "text": "Wir starten einfach.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#mitte",
    "href": "index.html#mitte",
    "title": "Start in R",
    "section": "Mitte",
    "text": "Mitte\n\nCode\nNoch etwas Code.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nErklärung\nHier könnte Ihre Erklärung stehen."
  },
  {
    "objectID": "index.html#ende",
    "href": "index.html#ende",
    "title": "Start in R",
    "section": "Ende",
    "text": "Ende\nDas ist das Ende."
  },
  {
    "objectID": "01-einfuehrung.html",
    "href": "01-einfuehrung.html",
    "title": "Installation",
    "section": "",
    "text": "Was nötig ist, um mit R arbeiten zu können, hängt davon ab, welches Betriebssystem auf eurem Gerät installiert ist."
  },
  {
    "objectID": "index.html#ablauf",
    "href": "index.html#ablauf",
    "title": "Willkommen!",
    "section": "Ablauf",
    "text": "Ablauf\n\nUnter “Einführung in R” finden sich Anleitungen, die die Einrichtung von R erklären und den Aufbau der Software “RStudio” erläutern. Zudem behandeln wir dort die ersten Schritte im Programmieren mit R."
  },
  {
    "objectID": "01-einfuehrung.html#installation",
    "href": "01-einfuehrung.html#installation",
    "title": "Einführung in R",
    "section": "",
    "text": "Was nötig ist, um mit R arbeiten zu können, hängt davon ab, welches Betriebssystem auf eurem Gerät installiert ist.\n\n\nAuf Windows und MacOS müssen wir zwei Programme installieren: zum einen die R-Distribution (das heißt, das Paket, mit dem man R-Code ausführen kann), zum anderen eine Entwicklungsumgebung, in der wir unseren R-Code schreiben können und die uns zahlreiche Hilfsmittel zum Schreiben unseres Codes und zum Anzeigen unserer Ergebnisse bietet.\nIn den vergangenen Jahren habe ich einige verschiedene ausprobiert, aber ich bin am Ende immer zu der bekanntesten Software für R zurückgekehrt, nämlich RStudio. RStudio ist eine von der Firma Posit entwickelte grafische Oberfläche, mit der ihr euren R-Code strukturiert schreiben und die Ergebnisse eurer Analyse ansprechend aufbereiten könnt. Natürlich könnt ihr auch andere Programme ausprobieren und benutzen, aber die weiteren Erklärungen sind auf RStudio ausgerichtet.\n\nR-Distribution\nR ist eine frei verfügbare Software und kann somit von jedem kostenlos heruntergeladen werden.\nIhr könnt sie installieren, indem ihr die Seite cran.r-project.org aufruft und dort auf den Link Download R for MacOS bzw. Download R for Windows klickt. Wenn ihr ein MacBook habt, wählt ihr auf dieser Seite die passende Version für euer Gerät aus. Bei Windows klicken wir auf base und dann auf den Downloadlink ganz oben.\nIhr folgt dann den Installationsanweisungen, dabei könnt ihr alles bei den Standardeinstellungen belassen.\nEntwicklungsumgebung\nDamit wir die R-Distribution sinnvoll nutzen können, benötigen wir eine Entwicklungsumgebung, in unserem Fall RStudio.\nUm RStudio zu installieren, geht auf die Seite posit.co/download/rstudio-desktop. Dort seht ihr den Punkt 2: Install RStudio. Es sollte bereits das richtige Betriebssystem vorgewählt sein, ansonsten finden sich darunter noch weitere Installer. Ladet nun durch Klick auf den Button Download RStudio for … das Installationsprogramm herunter und folgt den Installationsanweisungen.\n\nNun sollten sowohl R als auch RStudio auf eurem Gerät installiert sein."
  },
  {
    "objectID": "01-einfuehrung.html#ipads-and-android-tablets",
    "href": "01-einfuehrung.html#ipads-and-android-tablets",
    "title": "Einführung in R",
    "section": "iPads and Android tablets",
    "text": "iPads and Android tablets\nUnder construction."
  },
  {
    "objectID": "01-einfuehrung.html#ipads-und-android-tablets",
    "href": "01-einfuehrung.html#ipads-und-android-tablets",
    "title": "Installation",
    "section": "iPads und Android-Tablets",
    "text": "iPads und Android-Tablets\nAuch auf einem iPad oder einem Android-Tablet kann man mit R programmieren, auch wenn das ohne Tastatur und Maus wahrscheinlich schwierig ist. Sollte es so sein, dass ihr keinen Zugang zu einem Laptop habt, ist dies jedoch eine mögliche Lösung:\nWir installieren kein Programm auf unserem Gerät. Stattdessen erstellen wir ein Benutzerkonto bei Posit, dem Anbieter von RStudio. Auf diese Weise können wir, wenn auch nur mit beschränkter Rechenzeit, in unserem Browser programmieren. Hierzu geht ihr auf die Seite von Posit, posit.cloud, und klickt dort auf Get started. Wählt den kostenlosen Plan (Cloud Free) aus und registriert euch dann unter Sign up. Wenn das geklappt hat, solltet ihr bereit sein, um in R zu programmieren."
  },
  {
    "objectID": "01-einfuehrung.html#linux",
    "href": "01-einfuehrung.html#linux",
    "title": "Installation",
    "section": "Linux",
    "text": "Linux\nSolltet ihr eine Linux-Distribution auf eurem Laptop installiert haben, dann findet ihr auf YouTube sowie mit einer kurzen Internetrecherche zahlreiche Anleitungen, wie ihr R auf eurer Plattform installieren könnt. Ich gehe nicht näher auf diesen Fall ein, da man je nach Distribution unterschiedlich verfahren muss und ich dem geneigten Linux-Nutzer unterstelle, selbst in der Lage zu sein, die Installation durchzuführen."
  },
  {
    "objectID": "01-einfuehrung.html#windows-und-macos",
    "href": "01-einfuehrung.html#windows-und-macos",
    "title": "Installation",
    "section": "Windows und MacOS",
    "text": "Windows und MacOS\nAuf Windows und MacOS müssen wir zwei Programme installieren: zum einen die R-Distribution (das heißt, das Paket, mit dem man R-Code ausführen kann), zum anderen eine Entwicklungsumgebung, in der wir unseren R-Code schreiben können und die uns zahlreiche Hilfsmittel zum Schreiben unseres Codes und zum Anzeigen unserer Ergebnisse bietet.\nIn den vergangenen Jahren habe ich einige verschiedene ausprobiert, aber ich bin am Ende immer zu der bekanntesten Software für R zurückgekehrt, nämlich RStudio. RStudio ist eine von der Firma Posit entwickelte grafische Oberfläche, mit der ihr euren R-Code strukturiert schreiben und die Ergebnisse eurer Analyse ansprechend aufbereiten könnt. Natürlich könnt ihr auch andere Programme ausprobieren und benutzen, aber die weiteren Erklärungen sind auf RStudio ausgerichtet.\n\nR-Distribution\nR ist eine frei verfügbare Software und kann somit von jedem kostenlos heruntergeladen werden.\nIhr könnt sie installieren, indem ihr die Seite cran.r-project.org aufruft und dort auf den Link Download R for MacOS bzw. Download R for Windows klickt. Wenn ihr ein MacBook habt, wählt ihr auf dieser Seite die passende Version für euer Gerät aus. Bei Windows klicken wir auf base und dann auf den Downloadlink ganz oben.\nIhr folgt dann den Installationsanweisungen, dabei könnt ihr alles bei den Standardeinstellungen belassen.\nEntwicklungsumgebung\nDamit wir die R-Distribution sinnvoll nutzen können, benötigen wir eine Entwicklungsumgebung, in unserem Fall RStudio.\nUm RStudio zu installieren, geht auf die Seite posit.co/download/rstudio-desktop. Dort seht ihr den Punkt 2: Install RStudio. Es sollte bereits das richtige Betriebssystem vorgewählt sein, ansonsten finden sich darunter noch weitere Installer. Ladet nun durch Klick auf den Button Download RStudio for … das Installationsprogramm herunter und folgt den Installationsanweisungen.\n\nNun sollten sowohl R als auch RStudio auf eurem Gerät installiert sein."
  },
  {
    "objectID": "01-installation.html",
    "href": "01-installation.html",
    "title": "1.1 Installation",
    "section": "",
    "text": "Was nötig ist, um mit R arbeiten zu können, hängt davon ab, welches Betriebssystem auf eurem Gerät installiert ist."
  },
  {
    "objectID": "01-installation.html#windows-und-macos",
    "href": "01-installation.html#windows-und-macos",
    "title": "1.1 Installation",
    "section": "Windows und MacOS",
    "text": "Windows und MacOS\nAuf Windows und MacOS müssen wir zwei Programme installieren: zum einen die R-Distribution (das heißt, das Paket, mit dem man R-Code ausführen kann), zum anderen eine Entwicklungsumgebung, in der wir unseren R-Code schreiben können und die uns zahlreiche Hilfsmittel zum Schreiben unseres Codes und zum Anzeigen unserer Ergebnisse bietet.\nIn den vergangenen Jahren habe ich einige verschiedene ausprobiert, aber ich bin am Ende immer zu der bekanntesten Software für R zurückgekehrt, nämlich RStudio. RStudio ist eine von der Firma Posit entwickelte grafische Oberfläche, mit der ihr euren R-Code strukturiert schreiben und die Ergebnisse eurer Analyse ansprechend aufbereiten könnt. Natürlich könnt ihr auch andere Programme ausprobieren und benutzen, aber die weiteren Erklärungen sind auf RStudio ausgerichtet.\n\nR-Distribution\nR ist eine frei verfügbare Software und kann somit von jedem kostenlos heruntergeladen werden.\nIhr könnt sie installieren, indem ihr die Seite cran.r-project.org aufruft und dort auf den Link Download R for MacOS bzw. Download R for Windows klickt. Wenn ihr ein MacBook habt, wählt ihr auf dieser Seite die passende Version für euer Gerät aus. Bei Windows klicken wir auf base und dann auf den Downloadlink ganz oben.\nFolgt dann den Installationsanweisungen, dabei könnt ihr alles bei den Standardeinstellungen belassen.\nEntwicklungsumgebung\nDamit wir die R-Distribution sinnvoll nutzen können, benötigen wir eine Entwicklungsumgebung, in unserem Fall RStudio.\nUm RStudio zu installieren, geht auf die Seite posit.co/download/rstudio-desktop. Dort seht ihr den Punkt 2: Install RStudio. Es sollte bereits das richtige Betriebssystem vorgewählt sein, ansonsten finden sich darunter noch weitere Installer. Ladet nun durch Klick auf den Button Download RStudio for … das Installationsprogramm herunter und folgt den Installationsanweisungen.\n\nNun sollten sowohl R als auch RStudio auf eurem Gerät installiert sein."
  },
  {
    "objectID": "01-installation.html#ipads-und-android-tablets",
    "href": "01-installation.html#ipads-und-android-tablets",
    "title": "1.1 Installation",
    "section": "iPads und Android-Tablets",
    "text": "iPads und Android-Tablets\nAuch auf einem iPad oder einem Android-Tablet kann man mit R programmieren, auch wenn das ohne Tastatur und Maus wahrscheinlich schwierig ist. Sollte es so sein, dass ihr keinen Zugang zu einem Laptop habt, ist dies jedoch eine mögliche Lösung:\nWir installieren kein Programm auf unserem Gerät. Stattdessen erstellen wir ein Benutzerkonto bei Posit, dem Anbieter von RStudio. Auf diese Weise können wir, wenn auch nur mit beschränkter Rechenzeit, in unserem Browser programmieren. Hierzu geht ihr auf die Seite von Posit, posit.cloud, und klickt dort auf Get started. Wählt den kostenlosen Plan (Cloud Free) aus und registriert euch dann unter Sign up. Wenn das geklappt hat, solltet ihr bereit sein, um in R zu programmieren."
  },
  {
    "objectID": "01-installation.html#linux",
    "href": "01-installation.html#linux",
    "title": "1.1 Installation",
    "section": "Linux",
    "text": "Linux\nSolltet ihr eine Linux-Distribution auf eurem Laptop installiert haben, dann findet ihr auf YouTube sowie mit einer kurzen Internetrecherche zahlreiche Anleitungen, wie ihr R auf eurer Plattform installieren könnt. Ich gehe nicht näher auf diesen Fall ein, da man je nach Distribution unterschiedlich verfahren muss und ich dem geneigten Linux-Nutzer unterstelle, selbst in der Lage zu sein, die Installation durchzuführen."
  }
]